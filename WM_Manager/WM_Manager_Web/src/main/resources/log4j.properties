##
##
##
log4j.rootLogger=DEBUG, ConsoleAppender
#log4j.rootLogger=DEBUG, ConsoleAppender ,FileAppender ,DailyRollingFileAppender ,RollingFileAppender ,WriterAppender
#日志的输出级别  =DEBUG, 控制台,文件,每天产生一个日志文件,文件达到指定的尺寸的时候产生一个新的文件,将日志信息以流格式发送到任意指定的地方
#
#
#控制台
log4j.appender.ConsoleAppender=org.apache.log4j.ConsoleAppender
#可以灵活的指定布局方式
log4j.appender.ConsoleAppender.layout=org.apache.log4j.PatternLayout
#输出的日志类别在控制台属于 System.out
log4j.appender.ConsoleAppender.Target=System.out
#日志的输出格式 %r 启动至输出的时间 %t 输出此条日志的线程名(方法名) %p 日志的优先级 %c 日志所属的类目(类全名) %l 输出日志事件的发生位置，包括类目名、发生的线程，以及在代码中的行数 %m 输出代码中指定的讯息 %n 回车换行符
# [%r]-[%t]-[%p]--%c%n
# [0]-[main]-[DEBUG]-com.coderdream.log4j.HelloLog4j
# %d %c:%L-%m%n
#2018年12月15日20:21:49  com.coderdream.log4j.HelloLog4j.main (HelloLog4j.java:18 )-This is info message.
log4j.appender.ConsoleAppender.layout.ConversionPattern=\
  启动至输出的时间 [%r]-输出此条日志的线程名(方法名) [%t]\
  %n日志的优先级 [%p]-日志所属的类目(类全名) %c\
  %n%d{yyyy-MM-dd HH\:mm\:ss} \
  %n日志所属的类目(类全名):日志事件的发生位置 %c:%L\
  %n输出代码中指定的讯息 %m\
  %n*****************************************%n
#log4j.appender.ConsoleAppender.layout.ConversionPattern=[%d{HH:mm:ss:SSS}] [%p] - %l - %m%n
##
##
##文件
#log4j.appender.FileAppender=org.apache.log4j.FileAppender
##以 HTML 表格形式布局
#log4j.appender.FileAppender.layout=org.apache.log4j.HTMLLayout
##日志文件是否追加
#log4j.appender.FileAppender.Append=true
##相对路径 catalina.home 是tomcat目录
#log4j.appender.FileAppender.file=${catalina.home}/logs/FileAppender
##每分钟 生成一个日志文件
##log4j.appender.FileAppender.DatePattern='_'yyyy-MM-dd-HH-mm'.log'
##log4j.appender.FileAppender.layout.ConversionPattern=[%r]-[%t]-[%p]--%c%n----%d{yyyy-MM-dd HH\:mm\:ss} %c:%L-%m%n
##只输出DEBUG级别以上的日志!!
#log4j.appender.FileAppender.Threshold=DEBUG
##日志编码
#log4j.appender.FileAppender.Encoding=UTF-8
##设置日志文件的大小
##log4j.appender.FileAppender.MaxFileSize=10MB
##保存10个备份文件
##log4j.appender.FileAppender.MaxBackupIndex=10
##
##
##每天产生一个日志文件
#log4j.appender.DailyRollingFileAppender=org.apache.log4j.DailyRollingFileAppender
##包含日志信息的级别和信息字符串
#log4j.appender.DailyRollingFileAppender.layout=org.apache.log4j.SimpleLayout
##日志文件是否追加
#log4j.appender.DailyRollingFileAppender.Append=true
##相对路径 catalina.home 是tomcat目录
#log4j.appender.DailyRollingFileAppender.file=${catalina.home}/logs/DailyRollingFileAppender
##每小时 生成一个日志文件
#log4j.appender.DailyRollingFileAppender.DatePattern='_'yyyy-MM-dd-HH'.log'
##log4j.appender.DailyRollingFileAppender.layout.ConversionPattern=[%r]-[%t]-[%p]--%c%n----%d{yyyy-MM-dd HH\:mm\:ss} %c:%L-%m%n
##只输出DEBUG级别以上的日志!!
#log4j.appender.DailyRollingFileAppender.Threshold=DEBUG
##日志编码
#log4j.appender.DailyRollingFileAppender.Encoding=UTF-8
##设置日志文件的大小
##log4j.appender.DailyRollingFileAppender.MaxFileSize=10MB
##保存10个备份文件
##log4j.appender.DailyRollingFileAppender.MaxBackupIndex=10
##
##
##文件达到指定的尺寸的时候产生一个新的文件
#log4j.appender.RollingFileAppender=org.apache.log4j.RollingFileAppender
##包含日志产生的 时间、线程、类别等等信息
#log4j.appender.RollingFileAppender.layout=org.apache.log4j.TTCCLayout
##日志文件是否追加
#log4j.appender.RollingFileAppender.Append=true
##相对路径 catalina.home 是tomcat目录
#log4j.appender.RollingFileAppender.file=${catalina.home}/logs/RollingFileAppender
##每分钟 生成一个日志文件
##log4j.appender.RollingFileAppender.DatePattern='_'yyyy-MM-dd-HH-mm'.log'
##log4j.appender.RollingFileAppender.layout.ConversionPattern=[%r]-[%t]-[%p]--%c%n----%d{yyyy-MM-dd HH\:mm\:ss} %c:%L-%m%n
##只输出DEBUG级别以上的日志!!
#log4j.appender.RollingFileAppender.Threshold=DEBUG
##日志编码
#log4j.appender.RollingFileAppender.Encoding=UTF-8
##设置日志文件的大小
#log4j.appender.RollingFileAppender.MaxFileSize=10MB
##保存10个备份文件
#log4j.appender.RollingFileAppender.MaxBackupIndex=10
##
##
##将日志信息以流的方式发送到任意指定的地方
##log4j.appender.WriterAppender=org.apache.log4j.WriterAppender
##可以灵活的指定布局方式
##log4j.appender.WriterAppender.layout=org.apache.log4j.PatternLayout
#
#
#
#
# Print only messages of level DEBUG or above in the package noModule.
log4j.logger.noModule=DEBUG,ConsoleAppender
#输出com.hchenpan.dao中的mybatis日志
log4j.logger.com.hchenpan.dao=DEBUG
#输出 spring 中的日志
log4j.logger.org.springframework=DEBUG
#mybatis 日志配置
log4j.logger.com.ibatis=DEBUG
log4j.logger.com.ibatis.common.jdbc.SimpleDataSource=DEBUG
log4j.logger.com.ibatis.common.jdbc.ScriptRunner=DEBUG
log4j.logger.com.ibatis.sqlmap.engine.impl.SqlMapClientDelegate=DEBUG
#SQL 日志配置
log4j.logger.java.sql.Connection=DEBUG
log4j.logger.java.sql.Statement=DEBUG
log4j.logger.java.sql.PreparedStatement=DEBUG
log4j.logger.java.sql.ResultSet=DEBUG
log4j.logger.org.tuckey.web.filters.urlrewrite.UrlRewriteFilter=DEBUG